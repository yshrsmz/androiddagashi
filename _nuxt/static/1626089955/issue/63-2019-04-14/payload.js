__NUXT_JSONP__("/issue/63-2019-04-14", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u){return {data:[{milestone:{id:"MDk6TWlsZXN0b25lNDIwNzI5Nw==",number:63,url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fmilestone\u002F63",title:"63 2019-04-14",description:"Kotlin 1.3.30リリース、Android StudioのLintパフォーマンス改善、Cold flows, hot channels、など。",closedAt:"2019-04-14T10:42:59Z",issues:{totalCount:11,pageInfo:{startCursor:"Y3Vyc29yOnYyOpLPgAAAAAAABEvOGc5YLw==",endCursor:"Y3Vyc29yOnYyOpLPgAAAAAAAAGPOGbPuSQ==",hasPreviousPage:a,hasNextPage:a},nodes:[{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F769",title:"Square Cashのアーキテクチャ",body:"https:\u002F\u002Fspeakerdeck.com\u002Fegorand\u002Fu-plus-2019-modern-android-architecture\r\n動画：https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=z3u10ynX-VA&feature=youtu.be&t=7104\r\n\r\nSquareのCashアプリのアーキテクチャのオーバービューです。スライドだけだと分かりづらいですが、自分たちに必要なものをOSSプロジェクトにうまく切り出しているところが興味深かったです。",labels:{nodes:[]},comments:{totalCount:d,pageInfo:{startCursor:p,endCursor:p,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"API周りのBlockerの仕組みはフレキシブルでとても良さそうでした。\r\n\r\nPresenterが基本的にpure function、というのも面白いですね。MVIというかCycle.jsぽさを感じました",publishedAt:"2019-04-14T10:58:22Z",author:{login:e,url:f,avatarUrl:g}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F768",title:"Android StudioのLintパフォーマンス改善",body:"https:\u002F\u002Fmedium.com\u002Fandroiddevelopers\u002Fandroid-studio-project-marble-lint-performance-8baedbff2521\r\n\r\nAndroid Studio 3.3から始まったProject Marbleの一環としてAndroid Lintのパフォーマンスを改善した話です。[Android Lint用のプロファイラ](https:\u002F\u002Fgithub.com\u002Fgoogle\u002Fandroid-lint-performance-probe)も公開されているようです。",labels:{nodes:[{name:"AndroidStudio",description:b,color:"9BC363"}]},comments:{totalCount:d,pageInfo:{startCursor:q,endCursor:q,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"去年のAndroid Dev Summitのファイヤーサイドチャットで「Lintが遅いんだけれど？」という質問に対してTorが「Lintのパフォーマンスは我々のフォーカスではない」と言っていましたが、なんのかんので改善してくれたようで有りがたいです。",publishedAt:"2019-04-14T09:44:46Z",author:{login:h,url:i,avatarUrl:j}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F767",title:"Dagger2のComponent.Factory",body:"https:\u002F\u002Fproandroiddev.com\u002Fdagger-and-the-shiny-new-component-factory-c2234fcae6b1\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fbbwwqz\u002Fdagger_and_the_shiny_new_componentfactory\u002F\r\n\r\n2.22から追加された`@Component.Factory`は、Builderパターンで外部からの依存を`@BindInstance`する`@Component.Builder`と異なり、createメソッドの引数を直接`@BindInstance`することができます。\r\n\r\nこれで外部からの依存を渡し忘れてランタイムにクラッシュする、ということがなくなります。\r\nredditに記載されているコードスニペットがわかりやすいです。\r\n",labels:{nodes:[{name:l,description:b,color:m}]},comments:{totalCount:d,pageInfo:{startCursor:r,endCursor:r,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"コンポーネント作成時に渡すものが少ないならFactoryの方がよさそうですね。個人的にもFactoryの方が好みです。",publishedAt:"2019-04-14T09:49:43Z",author:{login:h,url:i,avatarUrl:j}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F766",title:"最近のAndroid開発ってどんな感じなの？",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fbcevyg\u002Fhow_is_the_current_android_development_landscape\u002F\r\n\r\nOPはKitKatの時代にAndroid開発をしていて、最近また再開しようとしているそうです。\r\nKitKatは2013年10月末のリリースです。\r\nこうして振り返ってみるといろいろなことが変わっています。",labels:{nodes:[{name:l,description:b,color:m}]},comments:{totalCount:s,pageInfo:{startCursor:"Y3Vyc29yOnYyOpHOHMjkSA==",endCursor:"Y3Vyc29yOnYyOpHOHMkQqA==",hasPreviousPage:a,hasNextPage:a},nodes:[{body:"一番評価の高いコメント、OPのタイトルとあわせると洒落が効いていておもしろいです",publishedAt:"2019-04-14T07:43:36Z",author:{login:e,url:f,avatarUrl:g}},{body:"いいコメントですね。LiveDataなどの利用で画面回転固定のアプリがもうすこし減ってくれるといいですね :-)",publishedAt:"2019-04-14T09:48:13Z",author:{login:h,url:i,avatarUrl:j}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F765",title:"Android開発を経験した後にiOS開発を勉強し始めるのってどんな感じ？",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fbcosru\u002Fhow_is_it_like_learning_ios_development_after\u002F\r\n\r\n\r\nAndroidの方が好きな人もiOSが好きな人もいて、意見が割れている印象です。\r\nあんまり突っ込むと宗教戦争になりそうですが。\r\n",labels:{nodes:[{name:l,description:b,color:m}]},comments:{totalCount:k,pageInfo:{startCursor:c,endCursor:c,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F764",title:"Kotlin Multiplatform ProjectでのMVPアーキテクチャ",body:"https:\u002F\u002Fmedium.com\u002F@liewjuntung\u002Fmvp-in-kotlin-multiplatform-4b828f18ed63\r\n\r\n\t",labels:{nodes:[{name:n,description:b,color:o}]},comments:{totalCount:k,pageInfo:{startCursor:c,endCursor:c,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F763",title:"ML Kitに自然言語処理系のAPIが追加される",body:"https:\u002F\u002Fproandroiddev.com\u002Fandroid-settings-panels-app-engagement-f21aecfa443\r\n\r\n言語認識とスマートリプライが可能になったようです。\r\nスマートリプライはGmailやGoogle Assistantで見かける、内容に沿った返信の候補を挙げる機能です\r\n",labels:{nodes:[]},comments:{totalCount:k,pageInfo:{startCursor:c,endCursor:c,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F762",title:"JankTestでUIのパフォーマンスをテストする",body:"https:\u002F\u002Fproandroiddev.com\u002Fdeep-dive-into-writing-performance-tests-with-janktest-46494e46b43\r\n\r\nAndroidXのテストライブラリに、UIのパフォーマンスを測定し、jank(遅延したり描画されなかったフレームのこと)を検出するための `JankTestHelper` というものがあるそうです。",labels:{nodes:[{name:"test",description:b,color:"597fcc"}]},comments:{totalCount:k,pageInfo:{startCursor:c,endCursor:c,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F761",title:"Kotlin 1.3.30リリース",body:"https:\u002F\u002Fblog.jetbrains.com\u002Fkotlin\u002F2019\u002F04\u002Fkotlin-1-3-30-released\r\n\r\n更新履歴はこちら\r\nhttps:\u002F\u002Fgithub.com\u002FJetBrains\u002Fkotlin\u002Fblob\u002F1.3.30\u002FChangeLog.md\r\n\r\nインクリメンタルビルド対応をはじめ、KAPTのパフォーマンス改善施策がいくつか含まれています。\r\n\r\nKotlin\u002FNative周りだと、CocoaPodsの実験的なサポートが追加されています。",labels:{nodes:[{name:n,description:b,color:o}]},comments:{totalCount:d,pageInfo:{startCursor:t,endCursor:t,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fbcix8v\u002Fkotlin_1330_released\u002F\r\n\r\nredditの反応はこちら\r\n\r\n私も経験しましたが、Daggerで`@IntoMap`\u002F`@MapKey`使ってMapを作り、`Map\u003CClass\u003Cout ViewModel\u003E, Provider\u003CViewModel\u003E\u003E`的なものをInjectするような作りになっているコードだと、コンパイルに失敗します。\r\nhttps:\u002F\u002Fgithub.com\u002Fgoogle\u002Fdagger\u002Fissues\u002F1478\r\nhttps:\u002F\u002Fyoutrack.jetbrains.com\u002Fissue\u002FKT-30979\r\n\r\nひとまずのworkaroundは`@MapKey`使うアノテーションをJavaにすることだそうですが、KClassの挙動がおかしい可能性があるので別の場所でも問題になるかもしれません。",publishedAt:"2019-04-14T07:20:54Z",author:{login:e,url:f,avatarUrl:g}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F760",title:"RecyclerViewで画面を作る",body:"https:\u002F\u002Ftechlife.cookpad.com\u002Fentry\u002F2019\u002F04\u002F11\u002F130000\r\n\r\nScrollView系を使わずに、Groupieを利用してRecyclerViewで複雑な画面をつくったそうです",labels:{nodes:[]},comments:{totalCount:s,pageInfo:{startCursor:"Y3Vyc29yOnYyOpHOHLsEAw==",endCursor:"Y3Vyc29yOnYyOpHOHMbAHw==",hasPreviousPage:a,hasNextPage:a},nodes:[{body:"Epoxyなんかは一覧だけでなくこの系統の画面作成に特化しているようなイメージありますが、RecyclerViewベースでUIつくると差分更新が楽で好みです。\r\n\r\nMVI\u002FRedux系のアーキテクチャとも親和性高いです",publishedAt:"2019-04-11T08:24:06Z",author:{login:e,url:f,avatarUrl:g}},{body:"ScrollViewが全体を最初にinflateするのに比べてパフォーマンスもよさそうですね",publishedAt:"2019-04-13T08:06:12Z",author:{login:h,url:i,avatarUrl:j}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F759",title:"Cold flows, hot channels",body:"https:\u002F\u002Fmedium.com\u002F@elizarov\u002Fcold-flows-hot-channels-d74769805f9\r\n\r\nKotlin Coroutineの開発者Romanによる[Kotlin Coroutines 1.2.0-alpha-2にFlow(cold streams)のプレビュー版が追加される](https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F756)で追加されたFlowの解説です。",labels:{nodes:[{name:n,description:b,color:o}]},comments:{totalCount:d,pageInfo:{startCursor:u,endCursor:u,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"Kotlin Slackで見かけましたが、Jake氏もさっそくSqlDelightのFlow対応を始めたようです",publishedAt:"2019-04-14T10:44:45Z",author:{login:e,url:f,avatarUrl:g}}]}}]}},title:"#63 2019-04-14"}],fetch:{},mutations:[]}}(false,"",null,1,"yshrsmz","https:\u002F\u002Fgithub.com\u002Fyshrsmz","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F654889?v=4","hkurokawa","https:\u002F\u002Fgithub.com\u002Fhkurokawa","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F6446183?v=4",0,"reddit","d93f0b","Kotlin","EC953C","Y3Vyc29yOnYyOpHOHMkzVw==","Y3Vyc29yOnYyOpHOHMkPnQ==","Y3Vyc29yOnYyOpHOHMkRIA==",2,"Y3Vyc29yOnYyOpHOHMjfMw==","Y3Vyc29yOnYyOpHOHMktBQ==")));