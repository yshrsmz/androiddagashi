__NUXT_JSONP__("/issue/72-2019-06-16", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){return {data:[{milestone:{id:"MDk6TWlsZXN0b25lNDM5Mzc0MQ==",number:72,url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fmilestone\u002F72",title:"72 2019-06-16",description:"Dynamic Feature Module内のコードにアクセスする、WorkManagerと定期処理、AndroidXとJUnit5、32bit版Android Studioのサポート終了、SignIn with Apple、など",closedAt:"2019-06-16T10:52:07Z",issues:{totalCount:13,pageInfo:{startCursor:"Y3Vyc29yOnYyOpLPgAAAAAAABRPOGzdjYQ==",endCursor:"Y3Vyc29yOnYyOpLPgAAAAAAAAGPOGxc5CA==",hasPreviousPage:a,hasNextPage:a},nodes:[{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F877",title:"Reactive StreamsとKotlin Flow",body:"https:\u002F\u002Fmedium.com\u002F@elizarov\u002Freactive-streams-and-kotlin-flows-bfd12772cda4\r\n\r\nKotlin FlowがRxやAkkaが準拠しているReactive Streamsの考え方をどう取り入れたか解説されています。またKotlin Flowが必要とあらばReactive StreamsのPublisherと相互変換することができることについても説明されています。",labels:{nodes:[{name:k,description:c,color:l}]},comments:{totalCount:g,pageInfo:{startCursor:m,endCursor:m,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"穿った見方かもしれませんがWWWDCで発表された[Combine](https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Fcombine)を意識して書かれたのかもしれません。",publishedAt:"2019-06-16T08:09:46Z",author:{login:h,url:i,avatarUrl:j}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F876",title:"既存アプリにFlutterを段階的に導入していく",body:"https:\u002F\u002Fhackernoon.com\u002Fhow-to-use-flutter-for-hybrid-development-alibabas-open-source-code-instance-302bf2273485\r\n\r\nAlibabaがどのようにFlutterを既存の資産を活かしつつ使っているか、を解説しています。\r\nOSSとして公開もしています\r\nhttps:\u002F\u002Fgithub.com\u002Falibaba\u002Fflutter_boost",labels:{nodes:[{name:"Flutter",description:c,color:"1591E5"},{name:"X-Plat",description:c,color:"efd4a0"}]},comments:{totalCount:d,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F875",title:"最近の面接のトレンド",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fc0brs9\u002Finterview_chills\u002F\r\n\r\nスレ主の周りでは最近ラピッドプロトタイピングがコーディング面接のトレンドのようです。\r\n\r\nコーディング面接の話よりは「そもそもシニアエンジニアとは？」というところでスレは盛り上がっています。",labels:{nodes:[{name:e,description:c,color:f}]},comments:{totalCount:d,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F874",title:"Dynamic Feature Module内のコードにアクセスする方法",body:"https:\u002F\u002Fmedium.com\u002Fandroiddevelopers\u002Fpatterns-for-accessing-code-from-dynamic-feature-modules-7e5dca6f9123",labels:{nodes:[]},comments:{totalCount:d,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F873",title:"WorkManagerと定期処理",body:"https:\u002F\u002Fmedium.com\u002Fandroiddevelopers\u002Fworkmanager-periodicity-ff35185ff006\r\n\r\nWorkManagerの使い方シリーズその3です。\r\n今回は定期処理についてまとまっています。",labels:{nodes:[]},comments:{totalCount:d,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F872",title:"AndroidX x JUnit5でUIテスト",body:"https:\u002F\u002Fswet.dena.com\u002Fentry\u002F2019\u002F06\u002F12\u002F170000\r\n\r\n公式ではまだ対応していおらず、 [mannodermaus\u002Fandroid-junit5](https:\u002F\u002Fgithub.com\u002Fmannodermaus\u002Fandroid-junit5)というライブラリを利用するようです",labels:{nodes:[{name:"test",description:c,color:"597fcc"}]},comments:{totalCount:d,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F871",title:"WorkManagerとKotlin",body:"https:\u002F\u002Fmedium.com\u002Fandroiddevelopers\u002Fworkmanager-meets-kotlin-b9ad02f7405e",labels:{nodes:[{name:k,description:c,color:l}]},comments:{totalCount:g,pageInfo:{startCursor:n,endCursor:n,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"Coroutineが使えるとアプリ部とロジックを共有しやすくていいですね",publishedAt:"2019-06-16T07:56:08Z",author:{login:h,url:i,avatarUrl:j}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F870",title:"Sign In with AppleについてのQ&A",body:"https:\u002F\u002Ftechcrunch.com\u002F2019\u002F06\u002F07\u002Fanswers-to-your-burning-questions-about-how-sign-in-with-apple-works\u002F\r\nhttps:\u002F\u002Fjp.techcrunch.com\u002F2019\u002F06\u002F11\u002F2019-06-07-answers-to-your-burning-questions-about-how-sign-in-with-apple-works\u002F\r\n\r\nAndroidでの対応はWebViewになるようです",labels:{nodes:[]},comments:{totalCount:d,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F869",title:"全部アプリのせいにされることもある",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fbz9tj9\u002Fsometimes_you_get_blamed_for_everything\u002F\r\n\r\n理不尽なストアレビューシリーズ\t",labels:{nodes:[{name:e,description:c,color:f}]},comments:{totalCount:d,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F868",title:"Hello, world! - Android@Microsoft",body:"https:\u002F\u002Fmedium.com\u002Fandroid-microsoft\u002Fhello-world-57fc0630d47c\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fbzrmrv\u002Fhello_world_androidmicrosoft\u002F\r\n\r\nMicrosoftのAndroidチームがどのように、何を使って働いているか、という紹介記事のようです。\r\n技術選定についてはかなり自由度がありそうです",labels:{nodes:[{name:e,description:c,color:f}]},comments:{totalCount:g,pageInfo:{startCursor:o,endCursor:o,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"むかし、ぜんぶReact Nativeだという話があった気がしますが、そんなことないんですね。",publishedAt:"2019-06-16T07:52:27Z",author:{login:h,url:i,avatarUrl:j}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F867",title:"参考になるイケてるデザインのアプリ教えて",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fbzoivu\u002Fwhat_are_some_beautiful_and_well_designed_apps_we\u002F",labels:{nodes:[{name:e,description:c,color:f}]},comments:{totalCount:d,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F866",title:"32bit版Android Studio\u002Fエミュレータのサポート終了",body:"https:\u002F\u002Fandroid-developers.googleblog.com\u002F2019\u002F06\u002Fmoving-android-studio-and-android.html\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fbzh238\u002Fmoving_android_studio_and_android_emulator_to\u002F\r\n\r\nまず今年中に非推奨になり、2020年の末日にサポート終了になります。",labels:{nodes:[{name:"AndroidStudio",description:c,color:"9BC363"},{name:e,description:c,color:f}]},comments:{totalCount:d,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F865",title:"Value Objects, Service Objects, and Glue",body:"https:\u002F\u002Fpublicobject.com\u002F2019\u002F06\u002F10\u002Fvalue-objects-service-objects-and-glue\u002F\r\n\r\n必要なオブジェクトを3種類に分ける考え方です。シンプルですが、わかりやすく納得のいくものでした。",labels:{nodes:[]},comments:{totalCount:d,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}}]}},title:"#72 2019-06-16"}],fetch:{},mutations:[]}}(false,null,"",0,"reddit","d93f0b",1,"hkurokawa","https:\u002F\u002Fgithub.com\u002Fhkurokawa","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F6446183?v=4","Kotlin","EC953C","Y3Vyc29yOnYyOpHOHfJ8aw==","Y3Vyc29yOnYyOpHOHfJ5HQ==","Y3Vyc29yOnYyOpHOHfJ4Wg==")));