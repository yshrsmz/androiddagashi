__NUXT_JSONP__("/issue/53-2019-02-03", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w){return {data:[{milestone:{id:"MDk6TWlsZXN0b25lNDAwNTM5Mw==",number:53,url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fmilestone\u002F53",title:"53 2019-02-03",description:"DroidKaigi2019のアプリがリリース、サンタトラッカーのソースコードが公開、リフレクションベースのDagger2、など",closedAt:"2019-02-03T10:11:07Z",issues:{totalCount:11,pageInfo:{startCursor:"Y3Vyc29yOnYyOpLPgAAAAAAABEvOGDQDQw==",endCursor:"Y3Vyc29yOnYyOpLPgAAAAAAAAGPOGBWMLQ==",hasPreviousPage:a,hasNextPage:a},nodes:[{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F652",title:"Fuchsiaは未来なのか？",body:"- https:\u002F\u002Fcommonsware.com\u002Fblog\u002F2019\u002F01\u002F28\u002Ffuchsia-future-build-two-throw-away.html\r\n- https:\u002F\u002Fcommonsware.com\u002Fblog\u002F2019\u002F01\u002F29\u002Ffuchsia-future-is-it-soup-yet.html\r\n- https:\u002F\u002Fcommonsware.com\u002Fblog\u002F2019\u002F01\u002F30\u002Ffuchsia-future-tale-two-languages.html\r\n- https:\u002F\u002Fcommonsware.com\u002Fblog\u002F2019\u002F01\u002F31\u002Ffuchsia-future-what-now.html\r\n\r\nThe Commons Blogが全4回にわたってFuchsiaによってAndroidアプリ開発がどういう影響を受けるかについて分析しています。",labels:{nodes:[{name:n,description:b,color:o},{name:p,description:b,color:q}]},comments:{totalCount:d,pageInfo:{startCursor:r,endCursor:r,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"第4回にそれぞれの立場からどう捉えるべきかという話が載っていて興味深かったです",publishedAt:"2019-02-03T07:35:48Z",author:{login:e,url:f,avatarUrl:g}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F651",title:"DroidKaigi2019のアプリがリリース",body:"\u003Cblockquote class=\"twitter-tweet\"\u003E\u003Cp lang=\"ja\" dir=\"ltr\"\u003EDroidKaigi 2019 公式アプリをGoogle Playでリリースしました！\u003Ca href=\"https:\u002F\u002Ft.co\u002Fx6llHovwYW\"\u003Ehttps:\u002F\u002Ft.co\u002Fx6llHovwYW\u003C\u002Fa\u003E\u003C\u002Fp\u003E&mdash; takahirom (@new_runnable) \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fnew_runnable\u002Fstatus\u002F1091871498451570688?ref_src=twsrc%5Etfw\"\u003EFebruary 3, 2019\u003C\u002Fa\u003E\u003C\u002Fblockquote\u003E\r\n\r\n\r\nhttps:\u002F\u002Fplay.google.com\u002Fstore\u002Fapps\u002Fdetails?id=io.github.droidkaigi.confsched2019",labels:{nodes:[{name:"DroidKaigi",description:b,color:"FDC137"}]},comments:{totalCount:h,pageInfo:{startCursor:c,endCursor:c,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F650",title:"Flutterのアーキテクチャ入門",body:"https:\u002F\u002Fmedium.com\u002Fflutter-community\u002Fflutter-app-architecture-101-vanilla-scoped-model-bloc-7eff7b2baf7e\r\n\r\n何も使わない場合、ScopedModel、BLoCパターンについてまとめてあります",labels:{nodes:[{name:n,description:b,color:o},{name:p,description:b,color:q}]},comments:{totalCount:h,pageInfo:{startCursor:c,endCursor:c,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F649",title:"PWAをPlay Storeに公開する準備（？）が整った",body:"https:\u002F\u002Fmedium.com\u002F@firt\u002Fgoogle-play-store-now-open-for-progressive-web-apps-ec6f3c6ff3cc\r\n\r\nタイトルだけ見ると「PWAをそのままストアに公開できるのか」と思いますが、内容としてはTWA(Trusted Web Activity)を最新版のChromeがサポートするので、そのうちストアで公開できるようになるかもね、ということのようです",labels:{nodes:[]},comments:{totalCount:2,pageInfo:{startCursor:"Y3Vyc29yOnYyOpHOG2UQRw==",endCursor:"Y3Vyc29yOnYyOpHOG2uHSw==",hasPreviousPage:a,hasNextPage:a},nodes:[{body:"どうやら、いままでも、WebViewだけのActivityをつくってアプリとしてリリースすることは可能だったのですが、TWAを使うことでWebViewを使わなくてもよくなったということのようです",publishedAt:"2019-02-01T05:10:42Z",author:{login:e,url:f,avatarUrl:g}},{body:"スマホの黎明期によく見かけたWebViewだけのなんちゃってアプリを思い出してしまいますが、Webでできることも増えているので良さそうですね",publishedAt:"2019-02-03T08:09:56Z",author:{login:k,url:l,avatarUrl:m}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F647",title:"リフレクションベースのDagger2",body:"https:\u002F\u002Fgithub.com\u002FJakeWharton\u002Fdagger-reflect\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Falpkwf\u002Fdagger_reflect_a_reflectionbased_implementation",labels:{nodes:[{name:i,description:b,color:j}]},comments:{totalCount:d,pageInfo:{startCursor:s,endCursor:s,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"開発時はreflectionを使い、プロダクションではannotation processorをつかうというアプローチはButteKnifeでもありましたね。\r\nhttps:\u002F\u002Fgithub.com\u002FJakeWharton\u002Fbutterknife\u002Ftree\u002Fmaster\u002Fbutterknife-reflect",publishedAt:"2019-02-03T07:12:07Z",author:{login:e,url:f,avatarUrl:g}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F646",title:"2019\u002F01\u002F30のAndroidxリリース",body:"https:\u002F\u002Fdeveloper.android.com\u002Fjetpack\u002Fandroidx\u002Freleases\u002F#january_30_2019\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Falpab1\u002Fandroidx_release_notes_300119_activity_annotation\r\n\r\nステーブルリリースはmediaだけで、ほかはアルファ版です\r\n\r\n",labels:{nodes:[{name:i,description:b,color:j}]},comments:{totalCount:d,pageInfo:{startCursor:t,endCursor:t,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"いろいろありますが、`activity`の`@ContentView`アノテーションがおもしろそうです。\r\nDataBinding使ってたら特に使いみちないかもですが…",publishedAt:"2019-01-31T16:08:30Z",author:{login:k,url:l,avatarUrl:m}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F645",title:"実機でのデザイン確認をより便利にするアプリWindow",body:"https:\u002F\u002Fmedium.com\u002F@wdziemia\u002Fa-new-tool-for-vqa-on-android-585e6f45ef40\r\n\r\nVQAってなんの略かと思ったら`Visual Quality Assistance`だそうです。\r\n画面上にオーバーレイでグリッドを表示してくれるアプリはいくつかありますが、特定のViewのサイズや座標を表示してくれるものは今までなかったのではないかと思います。",labels:{nodes:[]},comments:{totalCount:d,pageInfo:{startCursor:u,endCursor:u,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"よさそうですね。いままで目で数えてました 💦 ",publishedAt:"2019-02-03T07:14:43Z",author:{login:e,url:f,avatarUrl:g}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F644",title:"なぜkotlinx.android.syntheticはAOSPで推奨されないのか",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fala9p2\u002Fwhy_kotlinx_synthetic_is_no_longer_a_recommended\u002F\r\n\r\nAOSPのコミットでkotlinx.android.syntheticをやめているのを見て疑問に思ったようです。Developer Advocateの[コメント](https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fala9p2\u002Fwhy_kotlinx_synthetic_is_no_longer_a_recommended\u002Fefdvpkg)も参考にどうぞ。",labels:{nodes:[{name:i,description:b,color:j}]},comments:{totalCount:h,pageInfo:{startCursor:c,endCursor:c,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F643",title:"サンタトラッカーのソースコードが公開",body:"https:\u002F\u002Fandroid-developers.googleblog.com\u002F2019\u002F01\u002Fgoogle-releases-source-code-of-santa.html\r\n\r\n表面上はそこまで変わってませんがApp BundleとDynamic Featureの利用でapkサイズが8割も減ったそうです",labels:{nodes:[]},comments:{totalCount:h,pageInfo:{startCursor:c,endCursor:c,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F642",title:"GradleのincludeGroupでライブラリを取得するレポジトリを指定する",body:"https:\u002F\u002Fjebware.com\u002Fblog\u002F?p=573\r\n\r\nGradle 5.1から、ライブラリの取得先レポジトリを細かく指定できるようになったようです。\r\n若干設定が手間ですが、ビルド時間が少しは改善されそうです。\r\n\r\nなお記事内では`includeGroup`のサンプルのみが紹介されていますが、逆の機能を提供する`excludeGroup`というものもあります。",labels:{nodes:[]},comments:{totalCount:d,pageInfo:{startCursor:v,endCursor:v,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"Kotlin Multiplatform Projectで開発をしているとKotlin\u002FNative関連のpomファイルがsyncのたびにダウンロードされてめちゃくちゃ時間がかかる、という問題がありますが、これもこの機能を利用して抑制することができます\r\n\r\nhttps:\u002F\u002Fyoutrack.jetbrains.com\u002Fissue\u002FKT-28128\t",publishedAt:"2019-01-29T16:22:36Z",author:{login:k,url:l,avatarUrl:m}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F641",title:"1つのFragmentで複数のViewModelを持つのは悪いのか",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fakd9ok\u002Fis_using_multiple_viewmodels_in_fragment\u002F\r\n\r\nスレッドではViewModelの数は増やすべきでないという意見が多いようです",labels:{nodes:[{name:i,description:b,color:j}]},comments:{totalCount:d,pageInfo:{startCursor:w,endCursor:w,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"自分の経験では画面内のコンポーネントが互いに連携するのなら、1画面1ViewModelがよいように感じています",publishedAt:"2019-01-29T00:22:53Z",author:{login:e,url:f,avatarUrl:g}}]}}]}},title:"#53 2019-02-03"}],fetch:{},mutations:[]}}(false,"",null,1,"hkurokawa","https:\u002F\u002Fgithub.com\u002Fhkurokawa","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F6446183?v=4",0,"reddit","d93f0b","yshrsmz","https:\u002F\u002Fgithub.com\u002Fyshrsmz","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F654889?v=4","Flutter","1591E5","X-Plat","efd4a0","Y3Vyc29yOnYyOpHOG2uBAg==","Y3Vyc29yOnYyOpHOG2t8vA==","Y3Vyc29yOnYyOpHOG2HqMQ==","Y3Vyc29yOnYyOpHOG2t9OA==","Y3Vyc29yOnYyOpHOG1XB8w==","Y3Vyc29yOnYyOpHOG1H3SQ==")));