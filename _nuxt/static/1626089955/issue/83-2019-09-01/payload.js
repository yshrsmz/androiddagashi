__NUXT_JSONP__("/issue/83-2019-09-01", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){return {data:[{milestone:{id:"MDk6TWlsZXN0b25lNDYwMDg5NQ==",number:83,url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fmilestone\u002F83",title:"83 2019-09-01",description:"Android Studio 3.6 Canary9, CameraXの開発方針, Square製レイアウトライブラリContour, Google Playの脆弱性報奨金制度, 未使用リソースの定期削除, など",closedAt:"2019-09-01T10:08:12Z",issues:{totalCount:11,pageInfo:{startCursor:"Y3Vyc29yOnYyOpLPgAAAAAAABEvOHRQ89w==",endCursor:"Y3Vyc29yOnYyOpLPgAAAAAAAAGPOHPKo6A==",hasPreviousPage:a,hasNextPage:a},nodes:[{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1005",title:"宣言的UI",body:"https:\u002F\u002Fspeakerdeck.com\u002Fsonatard\u002Fxuan-yan-de-ui\r\n\r\n今後Androidにも本格的にやってくる「宣言的UI」、というパラダイムの解説スライドです。  \r\n特にAndroidに限った内容ではありませんが、とてもわかりやすくまとまっています",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1004",title:"Square製のレイアウトライブラリ、Contour",body:"https:\u002F\u002Fgithub.com\u002Fcashapp\u002Fcontour\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fcxq8n0\u002Fsquare_contour_layouts_with_lambdas\u002F\r\n\r\nConstraintLayoutと同様のことをコードのみで実現しようというライブラリのようです。\r\n\"Deprecating XML\"を謳っています。",labels:{nodes:[{name:e,description:d,color:f},{name:h,description:d,color:i}]},comments:{totalCount:g,pageInfo:{startCursor:j,endCursor:j,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"これもともとは [square\u002Fcontour](https:\u002F\u002Fgithub.com\u002Fsquare\u002Fcontour) だったんですが、 [cashapp\u002Fcontour](https:\u002F\u002Fgithub.com\u002Fcashapp\u002Fcontour) に移動していました。",publishedAt:"2019-09-01T07:55:59Z",author:{login:k,url:l,avatarUrl:m}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1003",title:"Google Playの脆弱性報奨金制度の拡充",body:"https:\u002F\u002Fandroid-developers.googleblog.com\u002F2019\u002F08\u002Fexpanding-bug-bounties-on-google-play.html\r\n\r\n主な変更点は次の二点です\r\n\t\r\n- 1億インストール以上の(Google製でない)アプリがGoogle Play Security Reward Programの対象に追加\r\n- アプリ内での個人データの不正利用への報奨金制度、Developer Data Protection Reward Programが新たに設立",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1002",title:"CameraXの開発方針",body:"https:\u002F\u002Fmedium.com\u002Fandroiddevelopers\u002Fcore-principles-behind-camerax-jetpack-library-8e8380f7604c",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1001",title:"Using Kotlin\u002FJS and Kotlin\u002FNative on Android",body:"https:\u002F\u002Fjakewharton.com\u002Fusing-kotlin-js-and-native-on-android\u002F\r\n\r\nJake Wharton氏によるDroidcon NYC 2019での発表のスライドです。\r\nスライドだけでは内容掴みづらいですが、Kotlin\u002FJSやKotlin\u002FNativeを利用して、Android上で動的なコードの差し替えを実現しています。\r\n\r\nセッション動画の公開が待ち遠しい…",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1000",title:"AndroidライブラリをMavenCentralに上げる方法 2019",body:"http:\u002F\u002Fblog.autsoft.hu\u002Fpublishing-an-android-library-to-mavencentral-in-2019\u002F\r\n\r\n時間とともに以前の方法が使えなくなるので最新版をまとめてくれたようです",labels:{nodes:[]},comments:{totalCount:g,pageInfo:{startCursor:n,endCursor:n,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"Redditはこちら\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fcw6lw9\u002Fpublishing_an_android_library_to_mavencentral_in\u002F",publishedAt:"2019-08-28T09:44:49Z",author:{login:"hkurokawa",url:"https:\u002F\u002Fgithub.com\u002Fhkurokawa",avatarUrl:"https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F6446183?v=4"}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F999",title:"Androidプロジェクトの未使用のリソースを定期的に削除する",body:"https:\u002F\u002Fblog.kyash.co\u002Fentry\u002F2019\u002F08\u002F28\u002F123630\r\n\r\n",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F998",title:"Now in Androidエピソード3",body:"https:\u002F\u002Flink.medium.com\u002F5G1QAYDVvZ\r\n\r\n恒例のChetによる最新のAndroid開発の動向です。今回はみなさんお馴染みの日本オフィスのDevRelのメンバーも登場しています。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F997",title:"Android Studio 3.6 Canary 7, 8, 9",body:"https:\u002F\u002Fandroidstudio.googleblog.com\u002F2019\u002F08\u002Fandroid-studio-36-canary-7-available.html\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fcufyym\u002Fandroid_studio_36_canary_7_available\u002F\r\n\r\nCanary7でMaven Publish Pluginがサポートされました\r\n\r\nドキュメントはこちら\r\nhttps:\u002F\u002Fdeveloper.android.com\u002Fstudio\u002Fpreview\u002Ffeatures#maven-publish\r\n\r\n\r\nhttps:\u002F\u002Fandroidstudio.googleblog.com\u002F2019\u002F08\u002Fandroid-studio-36-canary-8-available.html\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fcw7ego\u002Fandroid_studio_36_canary_8_available\u002F\r\n\r\nCanary8は7のquickfixのようです\r\n\r\n---\r\nなどとやっているうちにCanary9も出ました\r\n\r\nhttps:\u002F\u002Fandroidstudio.googleblog.com\u002F2019\u002F08\u002Fandroid-studio-36-canary-9-available.html\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fcx3zok\u002Fandroid_studio_36_canary_9_available\u002F\r\n\r\nアプリのデバッグビルド時に使われるパッケージングツールが`zipflinger`というものに変わりました。ビルドスピードが向上しているようです。\r\n\r\nKotlin Multiplatform Project対応も改善している、というレポートも見かけます。",labels:{nodes:[{name:"AndroidStudio",description:d,color:"9BC363"},{name:h,description:d,color:i}]},comments:{totalCount:g,pageInfo:{startCursor:o,endCursor:o,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"8\u002F23(金)からの一週間で3つもCanary版が出るとは思いませんでした",publishedAt:"2019-08-31T14:21:46Z",author:{login:k,url:l,avatarUrl:m}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F996",title:"Kotlin\u002FNativeのメモリーモデルに対する不満と解決案",body:"https:\u002F\u002Fitnext.io\u002Fwhy-the-kotlin-native-memory-model-cannot-hold-ae1631d80cf6\r\nhttps:\u002F\u002Fmedium.com\u002F@timelzayus\u002Fdesigning-a-kotlin-memory-safe-mode-c76c06317c3e\r\n\r\nKotlin\u002FNativeにはスレッドをまたいで共有したいオブジェクトはimmutableでなければならない、という制約があります。ただこれはランタイムに決定する特性で、コンパイル時チェックができません。\r\n\r\nこの特性に対する不満と、それを打開するための案として`const class`が提案されています",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F995",title:"Android cookpadLiveで採用してる技術 2019夏",body:"https:\u002F\u002Ftechlife.cookpad.com\u002Fentry\u002F2019\u002F08\u002F26\u002F160000",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}}]}},title:"#83 2019-09-01"}],fetch:{},mutations:[]}}(false,null,0,"","Kotlin","EC953C",1,"reddit","d93f0b","Y3Vyc29yOnYyOpHOH2fNaA==","yshrsmz","https:\u002F\u002Fgithub.com\u002Fyshrsmz","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F654889?v=4","Y3Vyc29yOnYyOpHOH1UPFg==","Y3Vyc29yOnYyOpHOH2batg==")));