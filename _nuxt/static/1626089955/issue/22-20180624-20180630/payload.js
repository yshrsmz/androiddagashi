__NUXT_JSONP__("/issue/22-20180624-20180630", (function(a,b,c,d,e,f){return {data:[{milestone:{id:"MDk6TWlsZXN0b25lMzQ0NzAwMQ==",number:22,url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fmilestone\u002F22",title:"22-20180624-20180630",description:"今週はDroidcon Berlinやshibuya.apk、Kotlin Developers Meetup Tokyoなどイベントがいくつか重なり、そのあたりの情報が多かった印象です",closedAt:"2018-07-01T12:16:42Z",issues:{totalCount:14,pageInfo:{startCursor:"Y3Vyc29yOnYyOpLPgAAAAAAABXfOFBoTcg==",endCursor:"Y3Vyc29yOnYyOpLPgAAAAAAAAGPOE_t8ag==",hasPreviousPage:a,hasNextPage:a},nodes:[{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F281",title:"シングルトンパターンはアンチパターンなのか？",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002F8v2wfa\u002Fare_singletons_a_bad_practice\u002F\r\n\r\nコメントでも触れられていますが、シングルトンを濫用するのがよくないという話だと思います。付け加えると、Androidアプリの場合はバックグラウンドにいるプロセスがkillされた場合にシングルトンもクリアされるので、状態を持たせるとおかしなことになる、というのもあると思います。",labels:{nodes:[{name:"reddit",description:d,color:"d93f0b"}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F280",title:"Universal Music Playerがv2にバージョンアップ",body:"https:\u002F\u002Fandroid-developers.googleblog.com\u002F2018\u002F06\u002Fa-new-universal-music-player.html\r\n\r\nArchitecture ComponentsやMediaSessionCompatを使って最近な作りに改修されたそうです。もちろんKotlinで書かれています",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F279",title:"@DslMarkerアノテーション",body:"https:\u002F\u002Fkotlinlang.org\u002Fdocs\u002Freference\u002Fwhatsnew11.html#scope-control-for-implicit-receivers-in-dsls\r\n\r\nHadiさんの [Kotlin Developer Meetup](https:\u002F\u002Fkotlin.connpass.com\u002Fevent\u002F90679\u002F) の発表で触れられたそうです。",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F278",title:"Slices Builders KTXの紹介",body:"https:\u002F\u002Fmedium.com\u002Fgoogle-developers\u002Fintroducing-slice-builders-ktx-2218ebde356\r\n\r\nSlices Builder KTXを利用するとこんな風にDSLっぽく書けるようです。\r\n\r\n```kotlin\r\n  list(context, sliceUri, ListBuilder.INFINITY) {\r\n      row {\r\n         setTitle(\"Hello world\")\r\n      }\r\n  }\r\n```",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F277",title:"Google Play Developer Publishing API V3の解説",body:"https:\u002F\u002Fandroid-developers.googleblog.com\u002F2018\u002F06\u002Fautomating-your-app-releases-with.html\r\n\r\n段階的リリースの割合引き上げやテストトラックの公開もAPIから出来るようです。段階的リリースの割合の引き上げはいままで手動でやっていたので、クラッシュ率が一定以下なら自動で引き上げるといったこともできそうですね。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F276",title:"Android Poor Programming Patterns",body:"https:\u002F\u002Fspeakerdeck.com\u002Faliceyuan\u002Fdroidcon-android-poor-programming-patterns\r\n\r\n数ヶ月前の発表ですが、とても共感する内容でした。トップダウンにアーキテクチャを導入してもいいのですが、アンチパターンの観点からコードをよくする方が進めやすいんじゃないかと個人的には思います。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F275",title:"サポートライブラリのできるまで - Transition",body:"https:\u002F\u002Fdocs.google.com\u002Fpresentation\u002Fd\u002F1zJ27UPjbLHMr9Q31ZoLJXg1lHDwC8Eh3KT7QU2AHbGw\u002Fedit?usp=sharing\r\n\r\nサポートライブラリの面白さ（？）が垣間見えておもしろいです。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F274",title:"Android P の非 SDK の制限についてお知らせ",body:"https:\u002F\u002Fdevelopers-jp.googleblog.com\u002F2018\u002F06\u002Fan-update-on-non-sdk-restrictions-in.html\r\n\r\n以前も取り上げた気がしますが、日本語版の記事が公開されていました。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F273",title:"Bazel 0.15 リリース",body:"https:\u002F\u002Fblog.bazel.build\u002F2018\u002F06\u002F26\u002Fbazel-0.15.html\r\n\r\nJava 8 APIのdesugarがサポートされたようです\r\n\r\n\u003Cblockquote class=\"twitter-tweet\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EVersion 0.15.0 of \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fbazelbuild?ref_src=twsrc%5Etfw\"\u003E@bazelbuild\u003C\u002Fa\u003E will include desugaring capability for certain Java 8 library APIs like java.time.*: \u003Ca href=\"https:\u002F\u002Ft.co\u002FWHuOahDz6c\"\u003Ehttps:\u002F\u002Ft.co\u002FWHuOahDz6c\u003C\u002Fa\u003E\u003Cbr\u003E\u003Cbr\u003EInteresting links:\u003Cbr\u003E- \u003Ca href=\"https:\u002F\u002Ft.co\u002FVOuM6r9Z94\"\u003Ehttps:\u002F\u002Ft.co\u002FVOuM6r9Z94\u003C\u002Fa\u003E\u003Cbr\u003E- \u003Ca href=\"https:\u002F\u002Ft.co\u002FIPYjOaddCr\"\u003Ehttps:\u002F\u002Ft.co\u002FIPYjOaddCr\u003C\u002Fa\u003E\u003Cbr\u003E- \u003Ca href=\"https:\u002F\u002Ft.co\u002F6QChBhffsl\"\u003Ehttps:\u002F\u002Ft.co\u002F6QChBhffsl\u003C\u002Fa\u003E\u003C\u002Fp\u003E&mdash; Jake Wharton (@JakeWharton) \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FJakeWharton\u002Fstatus\u002F1000040610630422529?ref_src=twsrc%5Etfw\"\u003EMay 25, 2018\u003C\u002Fa\u003E\u003C\u002Fblockquote\u003E\r\n\u003Cscript async src=\"https:\u002F\u002Fplatform.twitter.com\u002Fwidgets.js\" charset=\"utf-8\"\u003E\u003C\u002Fscript\u003E\r\n",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F272",title:"MotionLayout の紹介",body:"https:\u002F\u002Fmedium.com\u002Fgoogle-developers\u002Fintroduction-to-motionlayout-part-i-29208674b10d\r\n\r\nI\u002FO 2018 でも話題になった ConstraintLayout と組み合わせてアニメーションをする話です。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F271",title:"IntelliJ のアイコンのアップデート",body:"https:\u002F\u002Fblog.jetbrains.com\u002Fblog\u002F2018\u002F06\u002F26\u002Fnew-icons-in-intellij-platform-2018-2\u002F\r\n\r\n自分はツールバーをいつも消しているので気付きませんでしたが、けっこう変わったようです。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F269",title:"JakeのDroidcon Berlinの発表",body:"https:\u002F\u002Fspeakerdeck.com\u002Fjakewharton\u002Fblurring-the-line-between-native-and-web-droidcon-de-2018\r\n\r\n相変わらずビデオなしではよく分かりませんが、ネイティブとウェブの関係について話したようです。なお Flutter は意図的に省いたようです。\r\n\r\nhttps:\u002F\u002Ftwitter.com\u002FJakeWharton\u002Fstatus\u002F1011621428192530432",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F270",title:"ConstraintLayout 2.0.0 alpha1",body:"https:\u002F\u002Fandroidstudio.googleblog.com\u002F2018\u002F06\u002Fconstraintlayout-200-alpha-1.html\r\n\r\nGoogle I\u002FOでも触れられてたMotionLayoutが使えるようになっています\r\n\r\nConstraintLayoutのテックリードの方がMotionLayoutの紹介記事を連載しています\r\n\r\nhttps:\u002F\u002Fmedium.com\u002F@camaelon\u002Fintroduction-to-motionlayout-part-i-29208674b10d\r\nhttps:\u002F\u002Fmedium.com\u002F@camaelon\u002Fintroduction-to-motionlayout-part-ii-a31acc084f59\r\nhttps:\u002F\u002Fmedium.com\u002F@camaelon\u002Fintroduction-to-motionlayout-part-iii-47cd64d51a5",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F268",title:"Kotlin Fest開催の告知",body:"\u003Cblockquote class=\"twitter-tweet\" data-lang=\"en\"\u003E\u003Cp lang=\"ja\" dir=\"ltr\"\u003EKotlin技術カンファレンス「Kotlin Fest 2018」は8月25日(土)に開催します！会場は東京コンファレンスセンター品川で、参加者数350人を予定しています。イベントページは近日中に公開予定です！ \u003Ca href=\"https:\u002F\u002Ft.co\u002FxaZ1mpdmCL\"\u003Epic.twitter.com\u002FxaZ1mpdmCL\u003C\u002Fa\u003E\u003C\u002Fp\u003E&mdash; Kotlin Fest 2018 (@kotlin_fest) \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fkotlin_fest\u002Fstatus\u002F1011064117493239810?ref_src=twsrc%5Etfw\"\u003EJune 25, 2018\u003C\u002Fa\u003E\u003C\u002Fblockquote\u003E\r\n\u003Cscript async src=\"https:\u002F\u002Fplatform.twitter.com\u002Fwidgets.js\" charset=\"utf-8\"\u003E\u003C\u002Fscript\u003E\r\n\r\nまだイベントページはないそうです。 :bird: ",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}}]}},title:"#22-20180624-20180630"}],fetch:{},mutations:[]}}(false,null,0,"","Kotlin","EC953C")));