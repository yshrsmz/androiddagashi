__NUXT_JSONP__("/issue/14-20180429-20180505", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){return {data:[{milestone:{id:"MDk6TWlsZXN0b25lMzMwNzg2Ng==",number:m,url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fmilestone\u002F14",title:"14-20180429-20180505",description:"- コメントも表示するようにしました。",closedAt:"2018-05-06T10:55:48Z",issues:{totalCount:m,pageInfo:{startCursor:"Y3Vyc29yOnYyOpLPgAAAAAAABXfOExXKZw==",endCursor:"Y3Vyc29yOnYyOpLPgAAAAAAAAGPOEv9aEQ==",hasPreviousPage:a,hasNextPage:a},nodes:[{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F189",title:"Kotlin Coroutinesの色々な使い方",body:"https:\u002F\u002Fproandroiddev.com\u002Fandroid-coroutine-recipes-33467a4302e9",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F188",title:"バージョン15からPlay servicesとFirebaseのバージョニングが変わることに",body:"https:\u002F\u002Fandroid-developers.googleblog.com\u002F2018\u002F05\u002Fannouncing-new-sdk-versioning.html\r\n\r\nバージョンの整合性はServicesプラグインが取ってくれるとのこと。",labels:{nodes:[]},comments:{totalCount:2,pageInfo:{startCursor:"Y3Vyc29yOnYyOpHOFwn7nQ==",endCursor:"Y3Vyc29yOnYyOpHOFwqWuA==",hasPreviousPage:a,hasNextPage:a},nodes:[{body:"なんかすんなりビルドできないという報告が……。\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002F8gsffy\u002Fannouncing_new_sdk_versioning_in_google_play",publishedAt:"2018-05-04T07:57:52Z",author:{login:g,url:h,avatarUrl:i}},{body:"むしろ今までセマンティック・バージョニングじゃなかったことに驚きでした",publishedAt:"2018-05-04T11:11:05Z",author:{login:n,url:o,avatarUrl:p}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F187",title:"Lintのissueにナビゲーション関連のものがあったと話題に",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002F8ghr37\u002Finteresting_find_about_the_upcoming_navigation\u002F\r\n\r\n他にもKotlin関連やGDPR関連のものもあるそうです。",labels:{nodes:[{name:j,description:d,color:k}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F186",title:"Room 1.1.0-rc1がリリース",body:"https:\u002F\u002Fdeveloper.android.com\u002Ftopic\u002Flibraries\u002Farchitecture\u002Frelease-notes#may_2_2018_room_110_release_candidate\r\n\r\nリリースノートはKotlin 1.2.40への更新のみ。\r\nKotlin 1.2.40使うと[コンパイル通らない不具合](https:\u002F\u002Fissuetracker.google.com\u002Fissues\u002F78328708)があったので、その対応だけでリリースしたのかも？",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F185",title:"Chris BanesによるRxJava→Kotlin coroutine移行の話",body:"https:\u002F\u002Fmedium.com\u002F@chrisbanes\u002Frxjava-to-kotlin-coroutines-1204c896a700\r\n\r\n既存のRxJavaを残しつつ部分的に移行する話でなかなかおもしろいです。",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F184",title:"良いAndroidエンジニアになるためには、というトークに対するディスカッション",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002F8g2ftw\u002Ftalk_paving_your_path_to_becoming_a_better\u002F\r\n\r\nトーク自体も良いものなのですが、それについてRedditらしい（？）激しい応酬があったのが興味深かったです。とくにJWの激しい反応はJWウォッチャーの自分としても意外でした。",labels:{nodes:[{name:j,description:d,color:k}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F183",title:"オンボーディング（チュートリアル）画面は不要という記事に対するRedditの反応",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002F8g0jla\u002Fapp_onboarding_screens_you_dont_need_them\u002F\r\n\r\nオンボーディング中に登録させるようにしたらコンバージョン率が上がったという話があって興味深いです。正論だとは思いますが、実際にアプリを出すと思いのほかユーザーは細かいところで躓くということが分かるので、スキップ可能なオンボーディングは必要悪かなという気はします。",labels:{nodes:[{name:j,description:d,color:k}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F182",title:"Testing Support Libraryの新バージョンリリース",body:"\u003Cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EWe’ve just released a new version of the Android Testing Support Library including Jacoco fixes and a new `clearPackageData` flag to clear app data between tests!\u003Cbr\u003E\u003Cbr\u003ERead more here → \u003Ca href=\"https:\u002F\u002Ft.co\u002F58xZ182V36\"\u003Ehttps:\u002F\u002Ft.co\u002F58xZ182V36\u003C\u002Fa\u003E  \u003Ca href=\"https:\u002F\u002Ft.co\u002FMzABCCvLGr\"\u003Ehttps:\u002F\u002Ft.co\u002FMzABCCvLGr\u003C\u002Fa\u003E \u003Ca href=\"https:\u002F\u002Ft.co\u002FQ5Qh7a2Q5p\"\u003Epic.twitter.com\u002FQ5Qh7a2Q5p\u003C\u002Fa\u003E\u003C\u002Fp\u003E&mdash; Android Developers (@AndroidDev) \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FAndroidDev\u002Fstatus\u002F991044522531487745?ref_src=twsrc%5Etfw\"\u003E2018年4月30日\u003C\u002Fa\u003E\u003C\u002Fblockquote\u003E\r\n\r\nhttps:\u002F\u002Fdeveloper.android.com\u002Ftopic\u002Flibraries\u002Ftesting-support-library\u002Frelease-notes#espresso_302_runner_102_rules_102_monitor_102_androidtestorchestrator_102_2018_04_24",labels:{nodes:[{name:"test",description:d,color:"597fcc"}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F181",title:"java.timeの使い方",body:"https:\u002F\u002Fyawk.at\u002Fjava.time\u002F\r\n\r\n記事中の時間表示が全部動いてるのおもしろい\r\nAndroidなら https:\u002F\u002Fgithub.com\u002FJakeWharton\u002FThreeTenABP で。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F180",title:"Android StudioでのリファクタリングTIPS",body:"https:\u002F\u002Fjeroenmols.com\u002Fblog\u002F2018\u002F04\u002F26\u002Fandroidstudioshortcuts2\u002F\r\n\r\nコードナビゲーションとかリファクタリングをGIF付きで解説してくれているのでわかりやすい",labels:{nodes:[{name:"AndroidStudio",description:d,color:"9BC363"}]},comments:{totalCount:l,pageInfo:{startCursor:q,endCursor:q,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"ちなみに、この記事が使っているか分かりませんが、このプラグインを使うと入力したショートカットが表示されるので人に見せるときに便利です https:\u002F\u002Fplugins.jetbrains.com\u002Fplugin\u002F7345-presentation-assistant ",publishedAt:"2018-05-02T01:46:37Z",author:{login:g,url:h,avatarUrl:i}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F179",title:"Uberの発表したオーバーヘッドの少ないパフォーマンス計測ライブラリ",body:"https:\u002F\u002Feng.uber.com\u002Fnanoscope\u002F\r\n\r\nOS側を改造するという逆転の発想でオーバーヘッドの少ないメソッドトレーシングを実現したようです。Android Studio の計測ツールは使いものにならないぜ、というようなことが最初に書いてあって、ちょっと可哀想な気分になりました。TextView の auto-sizing が遅いとか WebView の初期化が遅いとか経験的には知っていそうなことがきちんと数値で出せるのは良さそうです。",labels:{nodes:[]},comments:{totalCount:l,pageInfo:{startCursor:r,endCursor:r,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"Reddit に中の人が現れて質問に答えているのが面白いです。\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002F8g1tuv\u002Fintroducing_nanoscope_an_extremely_accurate\u002F\r\n\r\n- なぜsystraceにカスタムトレースマーカーを付けなかったの？ → 事前にどのメソッドにマーカーを付けるか判断できなかった（実際思いもよらないメソッドがボトルネックだった）\r\n- Linux の perf コマンドで十分では？ → キャッシュミスまで解析できるのは嬉しいけれど、いまはJavaおよびJavaネイティブのメソッドだけ調べたかったのであまりオーバーヘッドのない方法を取りたかった\r\n\r\nたしかに既存の枠組みに乗ってくれればよさそうな気もしますが、計測ツールのオーバーヘッドを減らそうとすると、こういう方法しかなかったのかなとも思います。",publishedAt:"2018-05-02T02:10:09Z",author:{login:g,url:h,avatarUrl:i}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F178",title:"Kotlin Coroutinesの仕組みと簡単な使い方",body:"https:\u002F\u002Fsourcediving.com\u002Fkotlin-coroutines-in-android-e2d5bb02c275",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F177",title:"Androidデバイスの画面をプロジェクターに映すライブラリ",body:"https:\u002F\u002Fgithub.com\u002FGenymobile\u002Fscrcpy\r\n\r\n[The Commons Blog で紹介されてました](https:\u002F\u002Fcommonsware.com\u002Fblog\u002F2018\u002F04\u002F30\u002Fscrcpy-projecting-android-screen.html)。API 21以上である必要はありますが、よさそうです。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F176",title:"Dagger使うのやめようぜという記事",body:"http:\u002F\u002Farturdryomov.online\u002Fposts\u002Fa-dagger-to-remember\u002F\r\n\r\n主にkaptに対する不満な気もしますが、多少冗長でも自分で書いた方がわかりやすいという主張にはある程度の説得力があります。",labels:{nodes:[]},comments:{totalCount:l,pageInfo:{startCursor:s,endCursor:s,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"\u003E 主にkaptに対する不満な気もしますが\r\n\r\nですねー。kaptの改善に期待したい 😇 \r\n\r\nDagger使う場合でも、生成されたコードを一度読んでみると理解が深まるのでオススメです。",publishedAt:"2018-05-01T10:00:49Z",author:{login:n,url:o,avatarUrl:p}}]}}]}},title:"#14-20180429-20180505"}],fetch:{},mutations:[]}}(false,null,0,"","Kotlin","EC953C","hkurokawa","https:\u002F\u002Fgithub.com\u002Fhkurokawa","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F6446183?v=4","reddit","d93f0b",1,14,"yshrsmz","https:\u002F\u002Fgithub.com\u002Fyshrsmz","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F654889?v=4","Y3Vyc29yOnYyOpHOFv93xA==","Y3Vyc29yOnYyOpHOFv-ENQ==","Y3Vyc29yOnYyOpHOFvxe6Q==")));