__NUXT_JSONP__("/issue/90-2019-10-20", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){return {data:[{milestone:{id:"MDk6TWlsZXN0b25lNDc0NzAyMg==",number:90,url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fmilestone\u002F90",title:"90 2019-10-20",description:"R8によるenumの最適化, Ionic React, Slackにおけるコード共有, Gesture Navigationサポートの手引, ユニットテスト書いてる人どれくらいいる？, など",closedAt:"2019-10-20T10:48:23Z",issues:{totalCount:12,pageInfo:{startCursor:"Y3Vyc29yOnYyOpLPf________5vOHi79wg==",endCursor:"Y3Vyc29yOnYyOpLPf_______-0_OHl9cjg==",hasPreviousPage:a,hasNextPage:a},nodes:[{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1071",title:"!!はアンチパターンなのか論争",body:"\u003Cblockquote class=\"twitter-tweet\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EPeople who tell you that !! is an anti-pattern in Kotlin but who don&#39;t also include ?. and ?: as anti-patterns aren&#39;t worth listening to. In reality, they&#39;re all fine and, like all things, you just need to learn when each is appropriate (including requireNonNull and checkNonNull)\u003C\u002Fp\u003E&mdash; Jake Wharton (@JakeWharton) \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FJakeWharton\u002Fstatus\u002F1183444666613669888?ref_src=twsrc%5Etfw\"\u003EOctober 13, 2019\u003C\u002Fa\u003E\u003C\u002Fblockquote\u003E \u003Cscript async src=\"https:\u002F\u002Fplatform.twitter.com\u002Fwidgets.js\" charset=\"utf-8\"\u003E\u003C\u002Fscript\u003E\r\n\r\nJakeが以前から主張していることですが、以前に比べると賛同者が多いように見えます。",labels:{nodes:[{name:"Kotlin",description:c,color:"EC953C"}]},comments:{totalCount:d,pageInfo:{startCursor:n,endCursor:n,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"なおUbieではコーディング規約で `!!` は禁止しているようです\r\nhttps:\u002F\u002Fgithub.com\u002Fubie-inc\u002Fkotlin-coding-style\r\n\r\n背景についてはこちら。\r\n\u003Cblockquote class=\"twitter-tweet\"\u003E\u003Cp lang=\"ja\" dir=\"ltr\"\u003ENotNull変換みたいな危険な操作が !! だけでカジュアルにできるのは本当に危険が危ないので。requireNotNullはエラーメッセージを添えることもできて便利です。\u003Cbr\u003ElateinitはテストコードでDIするのに使ってるけど、Nullableにしない抜け道に過ぎないので原則使用は控えたい\u003Ca href=\"https:\u002F\u002Ft.co\u002FtBareq6hiR\"\u003Ehttps:\u002F\u002Ft.co\u002FtBareq6hiR\u003C\u002Fa\u003E\u003C\u002Fp\u003E&mdash; たろう (@ngsw_taro) \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fngsw_taro\u002Fstatus\u002F1055341548378906624?ref_src=twsrc%5Etfw\"\u003EOctober 25, 2018\u003C\u002Fa\u003E\u003C\u002Fblockquote\u003E \u003Cscript async src=\"https:\u002F\u002Fplatform.twitter.com\u002Fwidgets.js\" charset=\"utf-8\"\u003E\u003C\u002Fscript\u003E",publishedAt:"2019-10-13T23:21:13Z",author:{login:h,url:i,avatarUrl:j}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1072",title:"R8によるenumの最適化",body:"https:\u002F\u002Fjakewharton.com\u002Fr8-optimization-enum-ordinals-and-names\u002F\r\n\r\nJakeのR8 Optimizationシリーズです。今回はenumの `ordinal()` や `name()` の最適化について解説しています。",labels:{nodes:[]},comments:{totalCount:e,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1073",title:"Android Studio 3.6 Beta 1",body:"https:\u002F\u002Fandroidstudio.googleblog.com\u002F2019\u002F10\u002Fandroid-studio-36-beta-1-available.html\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fdg1s83\u002Fandroid_studio_36_beta_1_available\u002F\r\n\r\n",labels:{nodes:[{name:"AndroidStudio",description:c,color:"9BC363"},{name:f,description:c,color:g}]},comments:{totalCount:e,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1074",title:"IonicがReactのサポートを発表",body:"https:\u002F\u002Fionicframework.com\u002Fblog\u002Fannouncing-ionic-react\u002F\r\n\r\nIonicはWeb技術でクロスプラットフォームなアプリ開発ができるフレームワークです",labels:{nodes:[]},comments:{totalCount:d,pageInfo:{startCursor:o,endCursor:o,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"以前はCordovaベースでしたが、最近はCapacitorという独自開発のエンジンの上で動いているようです",publishedAt:"2019-10-19T13:35:03Z",author:{login:k,url:l,avatarUrl:m}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1075",title:"Now in Android エピソード6",body:"https:\u002F\u002Fmedium.com\u002Fandroiddevelopers\u002Fnow-in-android-6-dd7d1aca1361\r\n\r\n- Room 2.2.0等今週リリースのAndroidXのステーブル\u002Fベータ版紹介\r\n- Droidcon NYCのビデオ\r\n- Android Dev Summitのライブストリーミングや公式アプリ\r\n- ジェスチャーナビゲーションの対応方法\r\n- アクセシビリティのドキュメント改善",labels:{nodes:[]},comments:{totalCount:e,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1076",title:"Slackにおけるコード共有",body:"https:\u002F\u002Fslack.engineering\u002Fclient-consistency-at-slack-beyond-libslack-c9cfbe778fb7\r\n\r\n以前AndroidDagashiでも紹介した、[DropboxがC++でのロジック共有をやめた話](https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F980)に触発された記事のようです。\r\n\r\nLibslackという名前のC++ライブラリでAndroid\u002FiOS間のロジック共有を行っていたようですが、最近やめたそうです。\r\nSlackの場合は、すでに存在したAndroid\u002FiOSアプリをリファクタする形でコード共有を進めていったのが問題をややこしくする一因だったとか。",labels:{nodes:[{name:f,description:c,color:g}]},comments:{totalCount:d,pageInfo:{startCursor:p,endCursor:p,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"redditのスレッドはこちら\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fdjswz2\u002Fslack_like_dropbox_also_moves_away_from_c_code\u002F",publishedAt:"2019-10-20T07:06:17Z",author:{login:k,url:l,avatarUrl:m}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1077",title:"ユニットテスト書いてる人どれくらいいる？",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fdj65sw\u002Fhow_many_of_you_guys_are_actually_writing_unit\u002F",labels:{nodes:[{name:f,description:c,color:g},{name:"test",description:c,color:"597fcc"}]},comments:{totalCount:e,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1078",title:"Gesture Navigationサポートの手引き Part 3：干渉の回避",body:"https:\u002F\u002Fmedium.com\u002Fandroiddevelopers\u002Fgesture-navigation-handling-gesture-conflicts-8ee9c2665c69\r\n\r\n前回から間が空きましたが、Chris BanesによるGesture Navigationをサポートする上での解説シリーズのパート3です。今回はアプリのUIとGesture Navigationが干渉する場合の回避方法についてまとめてあります。",labels:{nodes:[]},comments:{totalCount:d,pageInfo:{startCursor:q,endCursor:q,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"フローチャートが便利ですが、ViewPagerについて「対応の必要なし」になるのはちょっと不思議でした。自分はGesture Navigationをオンにしていますが、たまにViewPagerと干渉してすこしストレスを感じます。",publishedAt:"2019-10-20T07:25:12Z",author:{login:h,url:i,avatarUrl:j}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1079",title:"Gesture Navigationサポートの手引き Part 4：Immersiveモード",body:"https:\u002F\u002Fmedium.com\u002Fandroiddevelopers\u002Fgesture-navigation-immersive-modes-43f2d37a925d\r\n\r\nChris BanesによるGesture Navigationの解説パート4です。今回が最終回でStickeyとNon-Stickeyの2つのImmersive Modeについて解説しています。",labels:{nodes:[]},comments:{totalCount:e,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1080",title:"Storage Access Framework (SAF)の基本",body:"https:\u002F\u002Fcommonsware.com\u002Fblog\u002F2019\u002F10\u002F19\u002Fscoped-storage-stories-saf-basics.html\r\n\r\nScoped Storageの導入によって今後重要性が増すと思われるStorage Access Framework (SAF)についての解説です。具体的なコードもあって分かりやすいです。",labels:{nodes:[]},comments:{totalCount:d,pageInfo:{startCursor:r,endCursor:r,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"ところで、恥ずかしながら、この記事を読むまでUriが1つのアクティビティ内でしか利用できないというのを知りませんでした……",publishedAt:"2019-10-20T07:42:22Z",author:{login:h,url:i,avatarUrl:j}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1081",title:"KotlinのDelegatesを使ってカスタムViewを作る",body:"https:\u002F\u002Fblog.autsoft.hu\u002Fbetter-custom-views-with-delegates\u002F\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fdj7c8f\u002Fbetter_custom_views_with_delegates\u002F",labels:{nodes:[{name:f,description:c,color:g}]},comments:{totalCount:d,pageInfo:{startCursor:s,endCursor:s,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"一番最後に書いてある、カスタムDelegateを作って子Viewの振る舞いと親Viewのgetter\u002Fsetterメソッドを紐付けるのはなかなかおもしろそうでした",publishedAt:"2019-10-20T08:53:14Z",author:{login:k,url:l,avatarUrl:m}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F1082",title:"Android NDK r21",body:"https:\u002F\u002Fandroid-developers.googleblog.com\u002F2019\u002F10\u002Fintroducing-ndk-r21-our-first-long-term.html\r\n\r\nr21からLong Term Supportの概念が取り入れられるようです",labels:{nodes:[]},comments:{totalCount:e,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}}]}},title:"#90 2019-10-20"}],fetch:{},mutations:[]}}(false,null,"",1,0,"reddit","d93f0b","hkurokawa","https:\u002F\u002Fgithub.com\u002Fhkurokawa","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F6446183?v=4","yshrsmz","https:\u002F\u002Fgithub.com\u002Fyshrsmz","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F654889?v=4","Y3Vyc29yOnYyOpHOIEYrlg==","Y3Vyc29yOnYyOpHOIG78Hw==","Y3Vyc29yOnYyOpHOIHA-3A==","Y3Vyc29yOnYyOpHOIHBDHA==","Y3Vyc29yOnYyOpHOIHBGZg==","Y3Vyc29yOnYyOpHOIHBX4g==")));