__NUXT_JSONP__("/issue/20-20180610-20180616", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){return {data:[{milestone:{id:"MDk6TWlsZXN0b25lMzQxMzQyNQ==",number:20,url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fmilestone\u002F20",title:"20-20180610-20180616",description:"大きなニュースはKotlin 1.2.50のリリースくらいでしょうか",closedAt:"2018-06-17T10:49:39Z",issues:{totalCount:12,pageInfo:{startCursor:"Y3Vyc29yOnYyOpLPgAAAAAAABK_OE9n2vQ==",endCursor:"Y3Vyc29yOnYyOpLPgAAAAAAAAGPOE8FRGg==",hasPreviousPage:a,hasNextPage:a},nodes:[{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F259",title:"JetpackのNavigationでCustom Viewを管理する",body:"https:\u002F\u002Fproandroiddev.com\u002Fjetpack-navigation-with-custom-views-c763255c9599\r\n\r\nNavigationが標準でサポートしているのはFragmentとActivityですが、[好きに拡張できるよ](https:\u002F\u002Fdeveloper.android.com\u002Ftopic\u002Flibraries\u002Farchitecture\u002Fnavigation\u002Fnavigation-add-new)、ということでCustom viewの遷移を管理できるようにしてみたようです。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F258",title:"最近のアプリ界隈での「設計」の違和感",body:"http:\u002F\u002Fquesera2.hatenablog.jp\u002Fentry\u002F2018\u002F06\u002F14\u002F022504\r\n\r\nいろいろ設計パターンありますが、表面的になぞるだけじゃなくて、それによって何が実現できるか、とか考えた上で採用したいですね。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F257",title:"React Nativeのrearchitecture",body:"https:\u002F\u002Ffacebook.github.io\u002Freact-native\u002Fblog\u002F2018\u002F06\u002F14\u002Fstate-of-react-native-2018\r\n\r\nハイブリッドアプリをより作りやすくするためのrearchitectureが進んでいるようです。しかし5年間開発して、まだバージョンが0.55というのもすごいですね……。",labels:{nodes:[{name:"React Native",description:d,color:"38D9FA"},{name:"X-Plat",description:d,color:"efd4a0"}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F256",title:"Kotlin Developers MeetupでHadi氏が来日するそうです",body:"https:\u002F\u002Fkotlin.connpass.com\u002Fevent\u002F90679\u002F\r\n\r\nすでに枠が埋まっているのですが、ご参考までに。",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F255",title:"Kotlinのvalプロパティのgetter",body:"\u003Cblockquote class=\"twitter-tweet\"\u003E\u003Cp lang=\"ja\" dir=\"ltr\"\u003Eそうなんだ... 👀 \u003Cbr\u003Evalなのにgetのたび結果が変わるようなところに違和感がある🤔 \u003Ca href=\"https:\u002F\u002Ft.co\u002FxxvwRHZpsb\"\u003Ehttps:\u002F\u002Ft.co\u002FxxvwRHZpsb\u003C\u002Fa\u003E\u003C\u002Fp\u003E&mdash; Yuki312 (@Yuki_312) \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FYuki_312\u002Fstatus\u002F1007635902317846528?ref_src=twsrc%5Etfw\"\u003EJune 15, 2018\u003C\u002Fa\u003E\u003C\u002Fblockquote\u003E\r\n\r\n\u003Cblockquote class=\"twitter-tweet\"\u003E\u003Cp lang=\"ja\" dir=\"ltr\"\u003Eちょっと違うかもですが、使い分けで悩むときは、自分はここに書いてることを参考にしていますー！！\u003Ca href=\"https:\u002F\u002Ft.co\u002FBR9JRutkju\"\u003Ehttps:\u002F\u002Ft.co\u002FBR9JRutkju\u003C\u002Fa\u003E\u003C\u002Fp\u003E&mdash; ふじたく (@magie_pooh) \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fmagie_pooh\u002Fstatus\u002F1007739426875691008?ref_src=twsrc%5Etfw\"\u003EJune 15, 2018\u003C\u002Fa\u003E\u003C\u002Fblockquote\u003E\r\n\r\n\u003Cblockquote class=\"twitter-tweet\"\u003E\u003Cp lang=\"ja\" dir=\"ltr\"\u003EKotlin的にはフィールドのvalは不変という意味でなくて単に代入できないという意味になっているみたいですね🤔バイトコード的にはバッキングフィールドを持たず、ただのメソッドになるみたいですね\u003C\u002Fp\u003E&mdash; takahirom (@new_runnable) \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fnew_runnable\u002Fstatus\u002F1007639107105796096?ref_src=twsrc%5Etfw\"\u003EJune 15, 2018\u003C\u002Fa\u003E\u003C\u002Fblockquote\u003E\r\n\r\nメソッドにするかプロパティにするかという話も合わせて興味深い議論です。",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:j,pageInfo:{startCursor:"Y3Vyc29yOnYyOpHOF7W_FQ==",endCursor:"Y3Vyc29yOnYyOpHOF7cIHQ==",hasPreviousPage:a,hasNextPage:a},nodes:[{body:"なお、個人的にはread onlyなプロパティに見せかける利点はほぼない気がするのですが、どうなのでしょうか。",publishedAt:"2018-06-16T04:55:27Z",author:{login:k,url:l,avatarUrl:m}},{body:"私は基本メソッドで書いてしまいますね…\r\nあとはふじたくさんの挙げているリンク参考にしています",publishedAt:"2018-06-17T11:04:51Z",author:{login:g,url:h,avatarUrl:i}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F254",title:"AMDのWindowsマシンでエミュレータが動かせるという話",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002F8qhirc\u002Famd_finally_gets_google_emulator_support_canary\u002F\r\n\r\n見逃していましたが、27.3.6から動かせるそうです。\r\nhttps:\u002F\u002Fandroidstudio.googleblog.com\u002F2018\u002F06\u002Femulator-2736-canary.html\r\n\r\nなおスレッドはWindowsとLinuxどちらがビルドが速いかという話題で盛り上がっています。",labels:{nodes:[{name:"reddit",description:d,color:"d93f0b"}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F253",title:"KotlinConf 2018のスピーカーが発表",body:"https:\u002F\u002Fkotlinconf.com\u002Fspeakers\u002F\r\n\r\nいつもの面子といったところですが、気になる人はぜひ。アーリーバードチケットすべて売り切れてしまったようです。",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F252",title:"Kotlin 1.2.50リリース",body:"https:\u002F\u002Fblog.jetbrains.com\u002Fkotlin\u002F2018\u002F06\u002Fkotlin-1-2-50-is-out\u002F\r\n\r\nAndroid関連で大きそうなのは下記の通りです。\r\n\r\n- マルチモジュールプロジェクトでのインクリメンタルビルドのパフォーマンス向上\r\n- kaptのパフォーマンス向上\r\n- ~~`gradle.properties`に`kapt.use.worker.api=true`を書くと、kaptをGradleのワーカーで動かしてくれる~~\r\n  - ~~要Gradle 4.3以降~~\r\n  - ~~1.2.60からデフォルトで有効にする予定~~\r\n\r\nまた、コンパイラにProgressiveモードが追加されました。\r\nこれは本来メジャーバージョンでしかリリースされない、後方互換性のない修正や改善をマイナーリリースでも有効にするためのものです。  \r\n基本的に、Kotlinのバージョンアップにキャッチアップしているアクティブな開発者向け機能なようです。  \r\nProgressiveモードはKotlinコンパイラの引数に`-Xprogressive`を追加することでモジュール毎に有効にされます。\r\n本来メジャーバージョンアップで追加されるはずの変更が適用されるので、もちろん既存コードがエラーになることもあります。",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:j,pageInfo:{startCursor:"Y3Vyc29yOnYyOpHOF6zmow==",endCursor:"Y3Vyc29yOnYyOpHOF7Xx1A==",hasPreviousPage:a,hasNextPage:a},nodes:[{body:"ちなみに、現状マルチモジュールなプロジェクトで`kapt.use.worker.api=true`記述すると下記リンクのエラーでビルドできません。(シングルモジュールなプロジェクトに関しては未検証)\r\n\r\nhttps:\u002F\u002Fyoutrack.jetbrains.net\u002Fissue\u002FKT-24919\r\n\r\nAGP3.2系でDataBinding使っていると下記のエラーも発生しています\r\nhttps:\u002F\u002Fyoutrack.jetbrains.net\u002Fissue\u002FKT-24915",publishedAt:"2018-06-14T08:01:07Z",author:{login:g,url:h,avatarUrl:i}},{body:"今確認したら `kapt.use.worker.api` に関する記述消えてますね 🤔 \r\n\r\nなおDataBindingでのエラーは下記対応で回避できそうです\r\nhttps:\u002F\u002Fgithub.com\u002Fgooglesamples\u002Fandroid-sunflower\u002Fpull\u002F52\r\n\r\n",publishedAt:"2018-06-16T09:18:03Z",author:{login:g,url:h,avatarUrl:i}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F251",title:"国際化された文字列をスタイリングする方法",body:"https:\u002F\u002Fmedium.com\u002Fgoogle-developers\u002Fstyling-internationalized-text-in-android-f99759fb7b8f\r\n\r\nHTMLタグは何度か使いましたが、文字列リソースのカスタムアノテーションは使ったことがありませんでした。カスタムアノテーションと ImageSpan で文字列に画像を入れるのはなるほどという感じです。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F250",title:"non-SDK APIにアクセスしたときの挙動",body:"https:\u002F\u002Fandroid-developers.googleblog.com\u002F2018\u002F06\u002Fan-update-on-non-sdk-restrictions-in.html\r\n\r\n以前から告知されていたことですが、Pからはnon-SDKのAPI（つまり `@hidden` なAPI）にアクセスできなくなります。[グレイリスト](https:\u002F\u002Fandroid.googlesource.com\u002Fplatform\u002Fframeworks\u002Fbase\u002F+\u002F85c81cb24c5d71fc79dea3ba498d1a509895bb01\u002Fconfig\u002Fhiddenapi-p-light-greylist.txt)に入っているものについては使えますが警告がログに出るとのことです。\r\n\r\nStrictModeであれば、ポリシーで違反時の挙動を変えられるのでテストのときに便利そうです。\r\nhttps:\u002F\u002Fcommonsware.com\u002Fblog\u002F2018\u002F06\u002F12\u002Fstrictmode-api-greylist-monitoring.html",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F249",title:"ConstraintLayout 1.1.2",body:"https:\u002F\u002Fandroidstudio.googleblog.com\u002F2018\u002F06\u002Fconstraintlayout-112.html\r\n\r\n1.1.1でパッケージが`androidx.constraintlayout.ConstraintLayout`になっていたのが、このリリースで`androidx.constraintlayout.widget.ConstraintLayout`に修正されています。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F248",title:"FacebookがAndroid\u002FiOSで使えるデバッグツールSonarを発表",body:"https:\u002F\u002Fcode.facebook.com\u002Fposts\u002F1461914677288302\u002Fopen-sourcing-sonar-a-new-extensible-debugging-tool\u002F\r\nhttps:\u002F\u002Ffbsonar.com\r\nhttps:\u002F\u002Fgithub.com\u002Ffacebook\u002FSonar\r\n\r\nざっくりいうと[Stetho](https:\u002F\u002Fgithub.com\u002Ffacebook\u002Fstetho)の進化版です。\r\nStethoはChromeのdev toolベースで開発していたため、Androidのデバッグツールとして利用するには制限があったとのこと。Sonarはスタンドアロンなアプリなのでこの制限がなく、たとえばadbを使ったりiOSのデバッグもできるようになったそうです。Stethoと同様にプラグインで拡張可能なので、いろいろできそうです。\r\n\r\nSonarのアプリ自体はElectron製で、プラグインのUIはReactで書くことができます。",labels:{nodes:[]},comments:{totalCount:1,pageInfo:{startCursor:n,endCursor:n,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"Publickey でも取り上げられていたのでリンク置いておきます。\r\nhttps:\u002F\u002Fwww.publickey1.jp\u002Fblog\u002F18\u002Fiosandroidsonarfacebook.html",publishedAt:"2018-06-12T23:46:33Z",author:{login:k,url:l,avatarUrl:m}}]}}]}},title:"#20-20180610-20180616"}],fetch:{},mutations:[]}}(false,null,0,"","Kotlin","EC953C","yshrsmz","https:\u002F\u002Fgithub.com\u002Fyshrsmz","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F654889?v=4",2,"hkurokawa","https:\u002F\u002Fgithub.com\u002Fhkurokawa","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F6446183?v=4","Y3Vyc29yOnYyOpHOF6Y3GA==")));