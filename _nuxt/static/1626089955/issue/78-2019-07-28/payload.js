__NUXT_JSONP__("/issue/78-2019-07-28", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){return {data:[{milestone:{id:"MDk6TWlsZXN0b25lNDUwODExNg==",number:78,url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fmilestone\u002F78",title:"78 2019-07-28",description:"In-App Updateの導入事例, コールバックをKotlin Flowで扱う, Android QのAMA, In-App Reviewの噂, Viewの状態をカプセル化する, など",closedAt:"2019-07-28T10:32:51Z",issues:{totalCount:10,pageInfo:{startCursor:"Y3Vyc29yOnYyOpLPgAAAAAAAA-fOHDyGhw==",endCursor:"Y3Vyc29yOnYyOpLPgAAAAAAAAGPOHBBdNA==",hasPreviousPage:a,hasNextPage:a},nodes:[{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F946",title:"In-App Updateの導入事例",body:"https:\u002F\u002Fmedium.com\u002Fandroiddevelopers\u002Fhow-pandao-uses-the-in-app-updates-flexible-flow-to-speed-up-the-app-update-process-on-android-5c00632680ed\r\n\r\nPandaoというサービスでのIn-App Updateの導入事例です。\r\n実装方法だけでなく、In-App Update利用後のアップデート率の変化にも触れています",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F945",title:"Viewの状態をカプセル化する",body:"https:\u002F\u002Fryanharter.com\u002Fblog\u002Fencapsulating-view-state\u002F\r\n\r\nViewModelから複数のデータを直接`LiveData`で公開するのではなく、ViewModel内でまとめてから公開しよう、という話。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F944",title:"JavaからKotlinへリファクタリングするcodelab",body:"https:\u002F\u002Fcodelabs.developers.google.com\u002Fcodelabs\u002Fjava-to-kotlin\u002F#0\r\nhttps:\u002F\u002Fmedium.com\u002Fandroiddevelopers\u002Ffrom-java-programming-language-to-kotlin-the-idiomatic-way-ac552dcc1741\r\n\r\n少し前ですが、JavaからKotlinにリファクタリングするcodelabがGoogleから公開されました",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F943",title:"どうやったらアプリを完成させられる？",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fcih0f7\u002Fadvice_on_actually_finishing_an_app\u002F\r\n\r\n80%くらいまで作ると飽きてしまう、というスレ主へのアドバイス。\r\n個人でやっているとあるあるな問題です。",labels:{nodes:[{name:g,description:d,color:h}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F942",title:"Android QのジェスチャーナビゲーションとPhilips Hueアプリ",body:"https:\u002F\u002Fjeroenmols.com\u002Fblog\u002F2019\u002F07\u002F17\u002Fandroidqgestures\u002F\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fcgvvn8\u002Fsupporting_android_q_gestural_navigation_in\u002F\r\n\r\n照明管理用のスライダーがたくさんあるPhilips Hueのアプリで、Android Qのジェスチャーナビゲーションにどうやって対応したか、という話です",labels:{nodes:[{name:g,description:d,color:h}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F941",title:"KotlinのCollectionとSequence",body:"https:\u002F\u002Fmedium.com\u002Fandroiddevelopers\u002Fcollections-and-sequences-in-kotlin-55db18283aca\r\n\r\ngifアニメもあって違いがわかりやすいです",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F940",title:"Play Storeがin-app reviewを準備中との噂",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002FAndroid\u002Fcomments\u002Fchq8sz\u002Fgoogle_play_store_prepares_to_add_inapp_reviews\u002F\r\nまだ噂ですが、アプリ内からPlay Store上のレビューを投稿できるようにする仕組みが準備されているとのことです。",labels:{nodes:[{name:g,description:d,color:h}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F939",title:"Android QのAMA",body:"AndroidエンジニアリングチームによるAndroid QについてのAMAが日本時間で8\u002F2 04:00 AMに行われるそうです。\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fci4tdq\u002Fwere_on_the_engineering_team_for_android_q_ask_us\u002F",labels:{nodes:[{name:g,description:d,color:h}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F938",title:"Kotlin FlowのRxJavaからのマイグレーション用メソッド",body:"Kotlin FlowにはRxJavaからのマイグレーション用のAPIが用意されているようです\r\n\r\n\u003Cblockquote class=\"twitter-tweet\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003ESpent an hour trying out Flow today. Super impressed that the \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fkotlin?ref_src=twsrc%5Etfw\"\u003E@kotlin\u003C\u002Fa\u003E team have added `\u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fdeprecated?ref_src=twsrc%5Etfw\"\u003E@Deprecated\u003C\u002Fa\u003E` stub extension funs for Flow, to allow easy migration from RxJava operators to Flow equivalents 🤯\u003Cbr\u003E\u003Cbr\u003ESource: 👇\u003Ca href=\"https:\u002F\u002Ft.co\u002FZvkvDPekoR\"\u003Ehttps:\u002F\u002Ft.co\u002FZvkvDPekoR\u003C\u002Fa\u003E \u003Ca href=\"https:\u002F\u002Ft.co\u002FPlI1u9MlGv\"\u003Epic.twitter.com\u002FPlI1u9MlGv\u003C\u002Fa\u003E\u003C\u002Fp\u003E&mdash; Chris Banes (@chrisbanes) \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fchrisbanes\u002Fstatus\u002F1153918684856901633?ref_src=twsrc%5Etfw\"\u003EJuly 24, 2019\u003C\u002Fa\u003E\u003C\u002Fblockquote\u003E \u003Cscript async src=\"https:\u002F\u002Fplatform.twitter.com\u002Fwidgets.js\" charset=\"utf-8\"\u003E\u003C\u002Fscript\u003E",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:i,pageInfo:{startCursor:j,endCursor:j,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"単に同名の `@Deprecated` のメソッドを生やしただけといえばそうですが、サードパーティライブラリのRxJavaからの移行を促す機能を標準ライブラリに持たせるのはやり過ぎに映ります",publishedAt:"2019-07-24T09:57:49Z",author:{login:k,url:l,avatarUrl:m}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F937",title:"コールバックをKotlin Flowで扱う",body:"https:\u002F\u002Fmedium.com\u002F@elizarov\u002Fcallbacks-and-kotlin-flows-2b53aa2525cf\r\n\r\nコールバックを受け取るAPIをKotlin Flowで扱うやり方について説明されています",labels:{nodes:[{name:e,description:d,color:f}]},comments:{totalCount:i,pageInfo:{startCursor:n,endCursor:n,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"最終的にchannelに要素を詰めるので、backpressureの話が登場します。やはりbackpressureの概念は避けようがないようです :-p",publishedAt:"2019-07-21T22:57:43Z",author:{login:k,url:l,avatarUrl:m}}]}}]}},title:"#78 2019-07-28"}],fetch:{},mutations:[]}}(false,null,0,"","Kotlin","EC953C","reddit","d93f0b",1,"Y3Vyc29yOnYyOpHOHquolQ==","hkurokawa","https:\u002F\u002Fgithub.com\u002Fhkurokawa","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F6446183?v=4","Y3Vyc29yOnYyOpHOHpzVyg==")));