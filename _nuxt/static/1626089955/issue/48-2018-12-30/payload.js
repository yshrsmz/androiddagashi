__NUXT_JSONP__("/issue/48-2018-12-30", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){return {data:[{milestone:{id:"MDk6TWlsZXN0b25lMzkyMTUzMg==",number:48,url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fmilestone\u002F48",title:"48 2018-12-30",description:"Android 2018 Highlights、Dagger2を利用する上でおさえておきたいTIPS、セキュアなアプリを作るために気をつけること、ProcessingでLiveWallpaper、など",closedAt:"2018-12-30T10:30:03Z",issues:{totalCount:10,pageInfo:{startCursor:"Y3Vyc29yOnYyOpLPgAAAAAAAA-fOF4kRpA==",endCursor:"Y3Vyc29yOnYyOpLPgAAAAAAAAGPOF4SobA==",hasPreviousPage:a,hasNextPage:a},nodes:[{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F597",title:"Kotlin\u002FNativeの標準ライブラリの実装を追いかける",body:"https:\u002F\u002Fyouta1119.github.io\u002Fpost\u002F2018\u002F12\u002F24\u002Fabout-kotlin-native-stdlib\u002F",labels:{nodes:[{name:"Kotlin",description:d,color:"EC953C"}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F596",title:"ProcessingでLiveWallpaperを作る",body:"https:\u002F\u002Fqiita.com\u002FIIInaIII\u002Fitems\u002F96f94839b920a45e0fc2",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F595",title:"セキュアなアプリを作るために気をつけること",body:"https:\u002F\u002Fproandroiddev.com\u002Fdeveloping-secure-android-apps-8edad978d8ba",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F594",title:"Android PのRipple Effectがバグっている件とその修正方法",body:"https:\u002F\u002Fproandroiddev.com\u002Frippling-rounding-and-android-pies-d5db5f4c2fc1\r\n\r\nAndroid PでSkiaベースのUI描画に切り替えた際にリグレッションが発生してしまったそうです",labels:{nodes:[]},comments:{totalCount:e,pageInfo:{startCursor:f,endCursor:f,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"角丸のShapeをプログラマティックに作ってセットしていると起きるんでしょうか。気付きにくそうです。",publishedAt:"2019-01-06T11:02:26Z",author:{login:g,url:h,avatarUrl:i}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F593",title:"Emulator 28.1.0 Canary",body:"https:\u002F\u002Fandroidstudio.googleblog.com\u002F2018\u002F12\u002Femulator-2810-canary.html\r\n\r\nエミュレータのCPU\u002FRAM使用量の改善を優先的に行っているようです。フィードバックがほしいようなので、なにか見つけた方はGoogleのissue trackerまでお願いします。\r\nまた上記の関連で、エミュレータを「終了」ではなく「一時停止」できるようになりました。\r\n\r\n`-no-window`オプション付きで起動すると、Qtとその依存関係をリンクしないようになったようです。CIで捗るかも",labels:{nodes:[{name:j,description:d,color:k}]},comments:{totalCount:e,pageInfo:{startCursor:l,endCursor:l,hasPreviousPage:a,hasNextPage:a},nodes:[{body:"redditの反応はこちら\r\nhttps:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Faacfuu\u002Femulator_2810_canary\u002F\t",publishedAt:"2018-12-30T09:12:48Z",author:{login:m,url:n,avatarUrl:o}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F589",title:"Dagger2を利用する上でおさえておきたいTIPS",body:"https:\u002F\u002Fproandroiddev.com\u002Fdagger-2-on-android-the-official-guidelines-you-should-be-following-2607fd6c002e\r\n\r\n`ApplicationContext`を提供するだけのModuleを作るよりは`@BindInstance`がいいよ、とか可能な限り`static`なprovideメソッドを書きましょう、とかいろいろあります。\r\n",labels:{nodes:[]},comments:{totalCount:2,pageInfo:{startCursor:"Y3Vyc29yOnYyOpHOGtc-yQ==",endCursor:"Y3Vyc29yOnYyOpHOGtq7IA==",hasPreviousPage:a,hasNextPage:a},nodes:[{body:"R8を使っていれば`@JvmStatic`いらないんですねー",publishedAt:"2018-12-28T08:08:49Z",author:{login:m,url:n,avatarUrl:o}},{body:"なんとなく使っていたので、知らないことがけっこうありました 💦 ",publishedAt:"2018-12-30T06:37:55Z",author:{login:g,url:h,avatarUrl:i}}]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F592",title:"「GraphQL」徹底入門",body:"https:\u002F\u002Femployment.en-japan.com\u002Fengineerhub\u002Fentry\u002F2018\u002F12\u002F26\u002F103000\r\n\r\nAndroidのみの話題ではないですが、GraphQLの概説および実装例まで載っていて、たいへんよい記事でした。ちょっと長いですが、GraphQLに興味のある方はぜひ読んでみてください。",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F591",title:"ReactNativeとKotlin\u002FJVM, Flutterだったらどれがいい？",body:"https:\u002F\u002Fwww.reddit.com\u002Fr\u002Fandroiddev\u002Fcomments\u002Fa9v7mn\u002Freact_native_vs_kotlinjava_vs_flutter\u002F\r\n\r\nKotlin\u002FJVMはKotlinで普通にAndroidアプリ開発することを指しているようです",labels:{nodes:[{name:j,description:d,color:k}]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F590",title:"Dagger2でWorkManagerにConstructor Injectionする",body:"https:\u002F\u002Fwww.arunkumarsampath.in\u002Fdagger-recipes-illustrative-step-by-step-guide-to-achieve-constructor-injection-in-workmanager\u002F\r\n\r\n`WorkerFactory`という`Worker`インスタンスを生成するクラスを使います。\r\n`Activity`や`Fragment`にも同じような機構が用意されているので、今はminSdkVersionによってはmember injectionをほとんど排除できるかもしれません",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}},{url:"https:\u002F\u002Fgithub.com\u002FAndroidDagashi\u002FAndroidDagashi\u002Fissues\u002F588",title:"Android 2018 Highlights",body:"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=CqBCLM-VDlE\r\n\r\n短い動画ですが、一年を振り返るにはいいきっかけかもしれません",labels:{nodes:[]},comments:{totalCount:c,pageInfo:{startCursor:b,endCursor:b,hasPreviousPage:a,hasNextPage:a},nodes:[]}}]}},title:"#48 2018-12-30"}],fetch:{},mutations:[]}}(false,null,0,"",1,"Y3Vyc29yOnYyOpHOGuzk-A==","hkurokawa","https:\u002F\u002Fgithub.com\u002Fhkurokawa","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F6446183?v=4","reddit","d93f0b","Y3Vyc29yOnYyOpHOGtrRWg==","yshrsmz","https:\u002F\u002Fgithub.com\u002Fyshrsmz","https:\u002F\u002Favatars.githubusercontent.com\u002Fu\u002F654889?v=4")));